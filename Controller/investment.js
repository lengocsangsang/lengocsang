// D∆∞·ªõi ƒë√¢y l√† ƒëo·∫°n code **JavaScript** ƒë·ªÉ t√≠nh **t·ª∑ su·∫•t l·ª£i nhu·∫≠n theo tr·ªçng s·ªë d√≤ng ti·ªÅn (MWRR)** b·∫±ng ph∆∞∆°ng ph√°p **IRR (Internal Rate of Return)**.

// Code n√†y s·ª≠ d·ª•ng ph∆∞∆°ng ph√°p l·∫∑p **Newton-Raphson** ƒë·ªÉ t√¨m nghi·ªám c·ªßa ph∆∞∆°ng tr√¨nh IRR.

// ---

// ### **Code JavaScript:**
// ```javascript
// function computeIRR(cashFlows, guess = 0.1, maxIterations = 100, precision = 1e-6) {
//     let rate = guess;

//     for (let i = 0; i < maxIterations; i++) {
//         let npv = 0;
//         let derivative = 0;

//         for (let t = 0; t < cashFlows.length; t++) {
//             npv += cashFlows[t] / Math.pow(1 + rate, t);
//             derivative += -t * cashFlows[t] / Math.pow(1 + rate, t + 1);
//         }

//         if (Math.abs(npv) < precision) {
//             return rate * 100; // Chuy·ªÉn th√†nh %
//         }

//         rate -= npv / derivative; // Newton-Raphson update

//         if (Math.abs(npv) < precision) {
//             return rate * 100;
//         }
//     }

//     return null; // Kh√¥ng h·ªôi t·ª•
// }

// // Danh s√°ch d√≤ng ti·ªÅn (√¢m: ƒë·∫ßu t∆∞, d∆∞∆°ng: thu v·ªÅ)
// const cashFlows = [-10000, -2000, 6000, -1000, 12000];

// // T√≠nh IRR
// const mwrr = computeIRR(cashFlows);

// console.log(`T·ª∑ su·∫•t l·ª£i nhu·∫≠n theo tr·ªçng s·ªë d√≤ng ti·ªÅn (MWRR): ${mwrr.toFixed(2)}%`);
// ```

// ---

// ### **C√°ch ho·∫°t ƒë·ªông:**
// - **Ph∆∞∆°ng ph√°p Newton-Raphson**: L·∫∑p l·∫°i ƒë·ªÉ t√¨m gi√° tr·ªã `r` sao cho NPV g·∫ßn b·∫±ng 0.
// - `cashFlows` ch·ª©a d√≤ng ti·ªÅn theo t·ª´ng k·ª≥.
// - `guess` l√† gi√° tr·ªã ban ƒë·∫ßu (10%).
// - `maxIterations` l√† s·ªë l·∫ßn l·∫∑p t·ªëi ƒëa (100 l·∫ßn).
// - `precision` l√† sai s·ªë ch·∫•p nh·∫≠n ƒë∆∞·ª£c (`1e-6`).

// ---

// ### **K·∫øt qu·∫£:**
// V·ªõi d·ªØ li·ªáu m·∫´u:
// ```js
// const cashFlows = [-10000, -2000, 6000, -1000, 12000];
// ```
// **K·∫øt qu·∫£ in ra:**
// ```
// T·ª∑ su·∫•t l·ª£i nhu·∫≠n theo tr·ªçng s·ªë d√≤ng ti·ªÅn (MWRR): 11.73%
// ```

// B·∫°n c√≥ th·ªÉ **copy & ch·∫°y** code n√†y trong tr√¨nh duy·ªát ho·∫∑c **Node.js**! üöÄ
